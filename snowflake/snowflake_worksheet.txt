-- create warehouse transforming;
-- create warehouse application;
-- create warehouse logging;

create database bigdorksonly;

create schema bigdorksonly.flipside;

create table bigdorksonly.flipside.curr_account_bals
(last_activity_block integer,
 last_activity_block_timestamp timestamp_ntz,
 user_address varchar,
 contract_address varchar,
 current_bal_unadj varchar,
 current_bal double,
 usd_value_last_activity double,
 usd_value_now double,
 network varchar,
 symbol varchar,
 token_name varchar,
 decimals integer,
 has_decimal boolean,
 has_price boolean,
 last_recorded_price timestamp_ntz,
 _etl_timestamp timestamp_ntz default sysdate()
);


create schema bigdorksonly.coingecko;

create table bigdorksonly.coingecko.spot_prices
(asset varchar,
 usd double,
 usd_market_cap double,
 usd_24h_vol double,
 _etl_timestamp timestamp_ntz default sysdate()
);

create table bigdorksonly.coingecko.trending_log
(id varchar,
 name varchar,
 symbol varchar,
 market_cap_rank int,
 score int,
 _etl_timestamp timestamp_ntz default sysdate()
);

create table bigdorksonly.coingecko.historical_prices_hourly
(time timestamp_ntz,
 date date,
 hour int,
 prices double,
 market_caps double,
 total_volumes double,
 cg_id varchar,
 symbol varchar,
 _etl_timestamp timestamp_ntz default sysdate()
);

create view bigdorksonly.coingecko.trending_assets AS
SELECT ID AS CG_ID, NAME, SYMBOL, MIN(_ETL_TIMESTAMP) AS MIN_TIME, MAX(_ETL_TIMESTAMP) AS MAX_TIME
FROM bigdorksonly.coingecko.trending_log
GROUP BY 1, 2, 3;

create view bigdorksonly.coingecko.trending_log_runs AS
WITH ind_logs AS (
SELECT DISTINCT _ETL_TIMESTAMP AS log_time
FROM bigdorksonly.coingecko.trending_log
ORDER BY 1 ASC
)
SELECT
    log_time,
    LAG(log_time, 1) OVER (ORDER BY log_time ASC) AS last_log_taken,
    DATE_PART(EPOCH, log_time) - DATE_PART(EPOCH, LAG(log_time, 1) OVER (ORDER BY log_time ASC)) AS log_lag_seconds
FROM ind_logs
ORDER BY 1 ASC;


create schema bigdorksonly.cryptowatch;

create table bigdorksonly.cryptowatch.spot_prices
(exchange varchar,
 asset varchar,
 base varchar,
 price double,
 _etl_timestamp timestamp_ntz default sysdate()
);
